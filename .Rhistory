dplyr::bind_rows(v_lines) %>%
dplyr::distinct() %>%
dplyr::select(x, y, xend, yend)
exterior_lines = all_lines %>%
dplyr::filter(x %in% c(0,1) & xend %in% c(0,1) |
y %in% c(0,1) & yend %in% c(0,1))
interior_lines = all_lines %>%
dplyr::anti_join(exterior_lines, by = c('x', 'xend', 'y', 'yend'))
lines_to_drop = 7
dropped_lines = 0
sample_interior_lines = interior_lines
while(dropped_lines<lines_to_drop){
sample_x_y = sample_interior_lines %>%
dplyr::slice_sample(n=1)
sample_x = sample_x_y$x
sample_y = sample_x_y$y
lines_set = sample_interior_lines %>%
dplyr::filter(
(x == sample_x & y == sample_y) |
(xend == sample_x & yend == sample_y)
)
if(nrow(lines_set) == 4){
other_x_y = lines_set %>%
dplyr::mutate(
other_x = dplyr::if_else(x==sample_x,xend,x),
other_y = dplyr::if_else(y==sample_y,yend,y)
) %>%
dplyr::slice_sample(n=1)
other_x = other_x_y$other_x
other_y = other_x_y$other_y
other_lines_set = sample_interior_lines %>%
dplyr::filter(
(x == other_x & y == other_y) |
(xend == other_x & yend == other_y)
)
if(nrow(other_lines_set)==4){
sample_interior_lines = sample_interior_lines %>%
dplyr::anti_join(other_x_y, by = c('x', 'xend', 'y', 'yend'))
dropped_lines = dropped_lines + 1
print(dropped_lines)
}
}
}
final_lines = exterior_lines %>%
dplyr::bind_rows(sample_interior_lines)
ggplot2::ggplot(data=final_lines) +
ggplot2::geom_segment(
ggplot2::aes(x=x, y=y, xend=xend, yend=yend)
)
generate_lines_and_polygons()
generate_perception_matrix()
generate_lines_and_polygons()
generate_perception_matrix()
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
sd = 0.1
rnorm(1, sd = sd)
get_vertices = function(x, y, sd = 0.1){
dplyr::tibble(
x = c(x, x+rnorm(n=2,sd=sd)),
y = c(y, y+rnorm(n=2,sd=sd))
)
}
get_vertices(0, 0)
vertices = get_vertices(0, 0)
?geom_segment
test = tibble(x=runif(100),
y=runif(100))
test = dplyr::tibble(x=runif(100),
y=runif(100))
test %>%
dplyr::mutate(vertices = get_vertices(x, y))
list(
x = c(x, x+rnorm(n=2,sd=sd)),
y = c(y, y+rnorm(n=2,sd=sd))
)
get_vertices = function(x, y, sd = 0.1){
list(
x = c(x, x+rnorm(n=2,sd=sd)),
y = c(y, y+rnorm(n=2,sd=sd))
)
}
test %>%
dplyr::mutate(vertices = get_vertices(x, y))
test = dplyr::tibble(x=runif(100),
y=runif(100))
test
test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = get_vertices(x, y))
test %>%
dplyr::mutate(vertices = list(get_vertices(x, y)))
test %>%
dplyr::mutate(vertices = list(get_vertices(x, y))) %>%
tidyr::unnest(cols = c(vertices))
test %>%
rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x, y))) %>%
tidyr::unnest(cols = c(vertices))
test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x, y))) %>%
tidyr::unnest(cols = c(vertices))
test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = get_vertices(x, y)) %>%
tidyr::unnest(cols = c(vertices))
test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = get_vertices(x, y))
test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x, y))) %>%
tidyr::unnest(cols = c(vertices)) %>%
get_vertices = function(x, y, sd = 0.1){
dplyr::tibble(
x = c(x, x+rnorm(n=2,sd=sd)),
y = c(y, y+rnorm(n=2,sd=sd))
)
}
test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x, y))) %>%
tidyr::unnest(cols = c(vertices))
test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x, y))) %>%
tidyr::unnest(cols = c(vertices)) %>%
tidyr::unnest(cols = c(vertices))
get_vertices = function(x, y, n_vertices = 2, sd = 0.1){
dplyr::tibble(
x = c(x, x+rnorm(n=n_vertices,sd=sd)),
y = c(y, y+rnorm(n=n_vertices,sd=sd))
)
}
get_vertices(0, 0)
vertices = get_vertices(0, 0)
vertices
vertices %>%
dplyr::inner_join(vertices, by = character())
vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character())
vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::mutate(id = c(dplyr::everything()))
vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::mutate(id = sort(c(x, y, xend, yend)))
vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::mutate(id = sort(c(x, y, xend, yend)))
vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
rowwise() %>%
dplyr::mutate(id = sort(c(x, y, xend, yend)))
vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::rowwise() %>%
dplyr::mutate(id = sort(c(x, y, xend, yend)))
vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::rowwise() %>%
dplyr::mutate(id = list(sort(c(x, y, xend, yend)))
dplyr::filter(!(x==xend & y==yend))
}
vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::rowwise() %>%
dplyr::mutate(id = list(sort(c(x, y, xend, yend))))
test = vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::rowwise() %>%
dplyr::mutate(id = list(sort(c(x, y, xend, yend))))
View(test)
test = vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::filter(!(x==xend & y==yend)) %>%
dplyr::mutate(id = list(sort(c(x, y, xend, yend))))
View(test)
test
test = vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::filter(!(x==xend & y==yend)) %>%
dplyr::rowwise() %>%
dplyr::mutate(id = list(sort(c(x, y, xend, yend)))) %>%
dplyr::distinct(id)
test
test = vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::filter(!(x==xend & y==yend)) %>%
dplyr::rowwise() %>%
dplyr::mutate(id = list(sort(c(x, y, xend, yend)))) %>%
dplyr::group_by(id) %>%
dplyr::slice_head(n=1)
test
test = vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::filter(!(x==xend & y==yend)) %>%
dplyr::rowwise() %>%
dplyr::mutate(id = list(sort(c(x, y, xend, yend)))) %>%
dplyr::distinct(id, .keep_all = T)
test
test = vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::filter(!(x==xend & y==yend)) %>%
dplyr::rowwise() %>%
dplyr::mutate(id = list(sort(c(x, y, xend, yend)))) %>%
dplyr::distinct(id, .keep_all = T) %>%
dplyr::select(-id)
vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::filter(!(x==xend & y==yend)) %>%
dplyr::rowwise() %>%
dplyr::mutate(id = list(sort(c(x, y, xend, yend)))) %>%
dplyr::distinct(id, .keep_all = T) %>%
dplyr::select(-id)
get_vertices(0, 0) %>% get_edges()
get_edges = function(vertices){
vertices %>%
dplyr::inner_join(
vertices %>%
dplyr::rename(xend=x, yend=y),
by = character()) %>%
dplyr::filter(!(x==xend & y==yend)) %>%
dplyr::rowwise() %>%
dplyr::mutate(id = list(sort(c(x, y, xend, yend)))) %>%
dplyr::distinct(id, .keep_all = T) %>%
dplyr::select(-id)
}
get_vertices(0, 0) %>% get_edges()
get_vertices(0, 0) %>% get_edges()
get_vertices(0, 0) %>% get_edges()
get_vertices(0, 0) %>% get_edges()
get_vertices(0, 0) %>% get_edges()
test = get_vertices(0, 0) %>% get_edges()
ggplot2::ggplot() +
ggplot2::geom_segment(data=test, aes(x=x,xend=xend,y=y,yend=yend))
ggplot2::ggplot() +
ggplot2::geom_segment(data=test, ggplot2::aes(x=x,xend=xend,y=y,yend=yend))
test = dplyr::tibble(x=runif(5),
y=runif(5))
test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = get_vertices(x, y) %>% get_edges())
test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x, y) %>% get_edges()))
test2 = test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x, y) %>% get_edges()))
View(test2)
View(test2[[3]][[1]])
test = dplyr::tibble(x0=runif(5),
y0=runif(5))
test2 = test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x0, y0) %>% get_edges())) %>%
tidyr::unnest(cols = c(vertices))
View(test2)
ggplot2::ggplot() +
ggplot2::geom_segment(data=test2, ggplot2::aes(x=x,xend=xend,y=y,yend=yend))
test = dplyr::tibble(x0=runif(100),
y0=runif(100))
test2 = test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x0, y0) %>% get_edges())) %>%
tidyr::unnest(cols = c(vertices)) %>%
tidyr::unnest(cols = c(vertices))
test2 = test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x0, y0) %>% get_edges())) %>%
tidyr::unnest(cols = c(vertices))
ggplot2::ggplot() +
ggplot2::geom_segment(data=test2, ggplot2::aes(x=x,xend=xend,y=y,yend=yend))
?geom_polygon
test = dplyr::tibble(x=(0, 0, 1, 1), y = (0, 1, 0, 1))
ggplot2::ggplot(data=test, ggplot2::aes(x=x, y=y)) + ggplot2::geom_polygon()
test = dplyr::tibble(xmin=0, xmax=1, ymin=0, ymax=1)
ggplot2::ggplot(data=test, ggplot2::aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax)) + ggplot2::geom_rect()
ggplot2::ggplot(data=test,
) +
ggplot2::geom_rect(
ggplot2::aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),
fill = 'white'
)
ggplot2::ggplot(data=test,
) +
ggplot2::geom_rect(
ggplot2::aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),
fill = 'white', col = 'black'
)
rep('1c/1d',8)
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
tibble(role_count = sample(role_counts))
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
data.frame(
role_count = sample(role_counts, size = length(role_counts)),
person = sample(people, size = length(people))
)
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
data.frame(
role_count = sample(role_counts, size = length(role_counts)),
person = sample(people, size = length(people))
)
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
data.frame(
role_count = sample(role_counts, size = length(role_counts)),
person = sample(people, size = length(people))
)
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
data.frame(
role_count = sample(role_counts, size = length(role_counts)),
person = sample(people, size = length(people))
)
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
data.frame(
role_count = sample(role_counts, size = length(role_counts)),
person = sample(people, size = length(people))
)
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
data.frame(
role_count = sample(role_counts, size = length(role_counts)),
person = sample(people, size = length(people))
)
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
data.frame(
role_count = sample(role_counts, size = length(role_counts)),
person = sample(people, size = length(people))
)
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
data.frame(
role_count = sample(role_counts, size = length(role_counts)),
person = sample(people, size = length(people))
)
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
data.frame(
role_count = sample(role_counts, size = length(role_counts)),
person = sample(people, size = length(people))
)
role_counts = c(
rep('1c/1d', 8),
rep('2c/1d', 2),
rep('1c/2d', 2)
)
people = c(
'leila', 'chris', 'bayla', 'ryan', 'anna', 'aleyna', 'sammie', 'logan',
'jared', 'kayla', 'megan', 'andrew'
)
data.frame(
role_count = sample(role_counts, size = length(role_counts)),
person = sample(people, size = length(people))
)
test = dplyr::tibble(x0=runif(100),
y0=runif(100))
test2 = test %>%
dplyr::rowwise() %>%
dplyr::mutate(vertices = list(get_vertices(x0, y0) %>% get_edges())) %>%
tidyr::unnest(cols = c(vertices))
ggplot2::ggplot() +
ggplot2::geom_segment(data=test2, ggplot2::aes(x=x,xend=xend,y=y,yend=yend))
generate_lines_and_polygons()
generate_lines_and_polygons()
generate_lines_and_polygons()
generate_lines_and_polygons()
generate_lines_and_polygons()
generate_fabric()
generate_fabric()
generate_perception_matrix()
generate_perception_matrix()
generate_perception_matrix()
generate_perception_matrix()
gener
genera
generate_circles()
library(StochasticArt)
devtools::document()
usethis::use_mit_license()
?data
library(StochasticArt)
devtools::document()
