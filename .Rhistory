ncol = 3
num_pieces = nrow * ncol
all_pieces = purrr::rerun(.n = nrow*ncol, generate_web())
cowplot::plot_grid(plotlist = all_pieces, nrow = nrow, ncol = ncol)
nrow = 3
ncol = 3
num_pieces = nrow * ncol
all_pieces = purrr::rerun(.n = nrow*ncol, generate_web())
cowplot::plot_grid(plotlist = all_pieces, nrow = nrow, ncol = ncol)
jpeg('~/Desktop/web.jpg',units="in", width=20, height=20, res=500)
cowplot::plot_grid(plotlist = all_pieces, nrow = nrow, ncol = ncol)
dev.off()
generate_circles()
library(StochasticArt)
generate_circles(num_circles = 10)
?generate_circles
generate_circles(global_max_r = 0.5)
generate_circles(global_max_r = 0.5)
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
rowwise() %>%
mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
ungroup()
Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Use coord_fixed to ensure true circularity
lim_min = min(min(circles$x), min(circles$y))
lim_max = max(max(circles$x), max(circles$y))
ggplot(data=circles) +
geom_circle(aes(x0 = x, y0 = y, r = r, col = c, fill = c, alpha = 0.5)) +
coord_fixed() +
theme_classic() +
#xlim(lim_min, lim_max) +
#ylim(lim_min, lim_max) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
# Lets make some data
n = sample(1:100, size = 1)
m = exp(rnorm(n=1))
e_sd = runif(n=1, 0)
r0 = runif(n=1, 0, 255)
g0 = runif(n=1, 0, 255)
b0 = runif(n=1, 0, 255)
circles <- data.frame(
x = runif(n=n, 0, 10),
e = rnorm(n, sd = 0.5),
r = runif(n=n)/10,
c_r = pmin(pmax(rnorm(n=n, mean=r0, sd=20), 0), 255),
c_g = pmin(pmax(rnorm(n=n, mean =g0, sd=20), 0), 255),
c_b = pmin(pmax(rnorm(n=n, mean =b0, sd=20), 0), 255)
) %>%
dplyr::rowwise() %>%
dplyr::mutate(y_true = sin(m*x),
y = y_true + e,
c = rgb(c_r, c_g, c_b, maxColorValue = 255)) %>%
dplyr::ungroup()
circles$c = factor(circles$c, levels = unique(circles$c))
ggplot(data=circles) +
geom_point(aes(x = x, y = y, col = c, fill = c, size = r), alpha = 1) +
scale_color_manual(values = levels(circles$c)) +
scale_fill_manual(values = levels(circles$c)) +
coord_fixed() +
#coord_flip() +
theme_classic() +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
generate_panels(single_color = F)
generate_panels(single_color = F)
generate_panels(single_color = F)
generate_panels(single_color = F)
generate_panels(single_color = F)
generate_panels(single_color = F)
generate_panels(single_color = F)
library(StochasticArt)
devtools::document()
library(StochasticArt)
generate_string_waves(frequency = 20, wobbliness = 10, stability_n=200, stability_sd=0.2, seed =50168005)
generate_string_waves()
remove.packages("StochasticArt")
